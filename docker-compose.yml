services:
  # Backend - FastAPI LangGraph Workflow Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vizuara_backend
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=true
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/web3builder
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
      - CORS_ALLOW_HEADERS=*
      - CORS_MAX_AGE=86400
    env_file:
      - ./backend/.env
    volumes:
      # Mount source code for development (comment out for production)
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    # depends_on:
       # - postgres
       # - redis

  # Frontend - Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: vizuara_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - INTERNAL_API_URL=http://backend:8000
    volumes:
      # Mount source code for development (comment out for production)
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database (commented out - not currently needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: vizuara_postgres
  #   environment:
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=web3builder
  #     - POSTGRES_HOST_AUTH_METHOD=trust
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U user -d web3builder"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Redis Cache (commented out - not currently needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: vizuara_redis
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge